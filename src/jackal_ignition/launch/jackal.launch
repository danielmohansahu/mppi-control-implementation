<?xml version="1.0"?>
<launch>
  <arg name="namespace" default="jackal" />
  <arg name="world" default="empty" doc="Gazebo world to spawn."/>

  <!-- tell ignition where to find stuff -->
  <env name="IGN_GAZEBO_SYSTEM_PLUGIN_PATH" value="$(optenv LD_LIBRARY_PATH)" />
  <env name="IGN_GAZEBO_RESOURCE_PATH" value="$(optenv IGN_GAZEBO_RESOURCE_PATH):$(find jackal_description)/.." />

  <!-- indicate we need to use simulation time -->
  <param name="use_sim_time" value="true" />

  <!-- Spawn world -->
  <include file="$(find ros_ign_gazebo)/launch/ign_gazebo.launch">
    <arg name="ign_args" value="-r -v 3 $(arg world).sdf"/>
  </include>

  <!-- generate Jackal's URDF as a robot_description -->
  <param name="$(arg namespace)/robot_description" command="$(find xacro)/xacro $(find jackal_ignition)/models/jackal.urdf.xacro" />

  <!-- also include the SDF for Ignition to spawn from -->
  <param name="$(arg namespace)/robot_description_sdf" textfile="$(find jackal_ignition)/models/jackal.sdf" />

  <!-- load Jackal Gazebo model -->
  <node pkg="ros_ign_gazebo" type="create" name="$(anon jackal_create)" output="screen"
        args="-world $(arg world) -param $(arg namespace)/robot_description_sdf -name $(arg namespace) -allow-renaming true -z 1">
  </node>

  <!-- map Ignition topics to ROS topics -->
  <node pkg="ros_ign_bridge" type="parameter_bridge" name="$(anon ros_ign_bridge)" output="screen"
    args="/$(arg namespace)/cmd_vel@geometry_msgs/Twist@ignition.msgs.Twist /$(arg namespace)/odom@nav_msgs/Odometry@ignition.msgs.Odometry /tf@tf2_msgs/TFMessage@ignition.msgs.Pose_V /world/$(arg world)/clock@rosgraph_msgs/Clock@ignition.msgs.Clock">
  </node>

  <!-- special handling for ignition's unwillingness to double-publish the /clock topic -->
  <node name="clock_relay" pkg="topic_tools" type="relay" required="true" args="/world/$(arg world)/clock /clock" />

  <!-- broadcast joint information for TF -->
  <node ns="$(arg namespace)" name="joint_state_publisher" type="joint_state_publisher" pkg="joint_state_publisher"
        output="screen" required="true" />
  <node ns="$(arg namespace)" name="robot_state_publisher" type="robot_state_publisher" pkg="robot_state_publisher"
    output="screen" required="true" >
    <param name="tf_prefix" value="$(arg namespace)" />
  </node>

</launch>
